name: Build and Test

on:
  push:
    branches: [ cicd_debug ]
    tags: ['v*']
  pull_request:
    branches: [ cicd_debug ]
  workflow_dispatch:

jobs:
  test:
    name: Test on ${{ matrix.os }} Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13]
        python-version: ["3.11"] #["3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install OpenMP (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install libomp
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest cython setuptools wheel cysignals
        
    - name: Build and install package
      run: |
        # First build the C library
        cmake .
        make
        
        # Add OpenMP library path to environment variables (macOS)
        if [ "$RUNNER_OS" == "macOS" ]; then
          export LIBRARY_PATH=$(pwd):$LIBRARY_PATH
          export LD_LIBRARY_PATH=$(pwd):$LD_LIBRARY_PATH
          export DYLD_LIBRARY_PATH=/usr/local/opt/libomp/lib:$DYLD_LIBRARY_PATH
        fi
        
        # Then install the package in development mode using setuptools directly
        python setup.py develop
        
    - name: Test with pytest
      run: |
        pytest

  build_wheels_linux:
    name: Build Linux wheels
    runs-on: ubuntu-latest
    needs: test
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install cibuildwheel
      run: |
        python -m pip install cibuildwheel
        
    - name: Build wheels
      env:
        CIBW_BUILD: "cp312-*" #"cp310-* cp311-* cp312-*"
        CIBW_SKIP: "*-musllinux_* pp*"
        CIBW_BEFORE_BUILD: "pip install cython setuptools wheel cysignals && cmake . && make"
        CIBW_BUILD_FRONTEND: "pip"
      run: |
        python -m cibuildwheel --output-dir wheelhouse
        
    - name: Upload wheels as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: wheels-linux
        path: ./wheelhouse/*.whl

  build_wheels_macos_arm64:
    name: Build macOS arm64 wheels
    runs-on: macos-latest  # Uses arm64 architecture
    needs: test
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install OpenMP
      run: |
        brew install libomp
        
    - name: Install cibuildwheel
      run: |
        python -m pip install cibuildwheel
        
    - name: Build wheels
      env:
        CIBW_ARCHS: "arm64"
        CIBW_BUILD: "cp312-*" #"cp310-* cp311-* cp312-*"
        CIBW_BEFORE_BUILD: "brew install libomp && pip install cython setuptools wheel cysignals && cmake . && make"
        CIBW_ENVIRONMENT: "LIBRARY_PATH=$(pwd):$LIBRARY_PATH LD_LIBRARY_PATH=$(pwd):$LD_LIBRARY_PATH"
        CIBW_BUILD_FRONTEND: "pip"
      run: |
        python -m cibuildwheel --output-dir wheelhouse
        
    - name: Upload wheels as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: wheels-macos-arm64
        path: ./wheelhouse/*.whl

  build_wheels_macos_x86_64:
    name: Build macOS x86_64 wheels
    runs-on: macos-13  # Still supports x86_64 builds
    needs: test
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install OpenMP
      run: |
        brew install libomp
        
    - name: Install cibuildwheel
      run: |
        python -m pip install cibuildwheel
        
    - name: Build wheels
      env:
        CIBW_ARCHS: "x86_64"
        CIBW_BUILD: "cp312-*" #"cp310-* cp311-* cp312-*"
        CIBW_BEFORE_BUILD: "brew install libomp && pip install cython setuptools wheel cysignals && cmake . && make"
        CIBW_ENVIRONMENT: "LIBRARY_PATH=$(pwd):$LIBRARY_PATH LD_LIBRARY_PATH=$(pwd):$LD_LIBRARY_PATH"
        CIBW_BUILD_FRONTEND: "pip"
      run: |
        python -m cibuildwheel --output-dir wheelhouse
        
    - name: Upload wheels as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: wheels-macos-x86_64
        path: ./wheelhouse/*.whl
        
  # publish:
  #   name: Publish to PyPI
  #   runs-on: ubuntu-latest
  #   needs: [build_wheels_linux, build_wheels_macos_arm64, build_wheels_macos_x86_64]
  #   if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
  #   
  #   steps:
  #   - uses: actions/checkout@v4
  #   
  #   - name: Set up Python
  #     uses: actions/setup-python@v5
  #     with:
  #       python-version: '3.11'
  #       
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install build twine
  #       
  #   - name: Download wheels
  #     uses: actions/download-artifact@v4
  #     with:
  #       path: dist
  #       pattern: wheels-*
  #       merge-multiple: true
  #       
  #   - name: Build source distribution
  #     run: |
  #       python -m build --sdist
  #       
  #   - name: Publish to PyPI
  #     if: startsWith(github.ref, 'refs/tags/v')
  #     env:
  #       TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
  #       TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
  #     run: |
  #       twine upload dist/*
